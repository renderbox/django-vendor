name: Python Tests

on:
  pull_request:
    branches: ["main", "develop"]

jobs:
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - run: pip install black isort flake8
      - run: black --check src
      - run: isort --check-only src
      - run: flake8 src

  migrations:
    name: Check Missing Migrations
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - run: pip install -e .[dev,test] # assumes extras_require for test deps
      - run: python develop/manage.py makemigrations --check --dry-run

  test:
    name: Django ${{ matrix.django-version }} on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: [lint, migrations]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        django-version: ["4.0", "4.1", "4.2", "5.0", "5.1"]
        exclude:
          - python-version: "3.10"
            django-version: "5.0" # Django 5.0 requires Python >=3.11
          - python-version: "3.10"
            django-version: "5.1" # Django 5.1 requires Python >=3.11
          - python-version: "3.13"
            django-version: "4.0" # Django 4.0 does not support Python 3.13
          - python-version: "3.13"
            django-version: "4.1" # Django 4.1 does not support Python 3.13
          - python-version: "3.13"
            django-version: "4.2" # Django 4.2 does not support Python 3.13
          - python-version: "3.13"
            django-version: "5.0" # Django 5.0 does not support Python 3.13
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up PostgreSQL
        uses: ankane/setup-postgres@v1
        with:
          postgres-version: 15
          database: test_db
          # username: runner

      - name: Set Postgres Password
        run: |
          psql -U runner -d test_db -c "ALTER USER runner WITH PASSWORD 'postgres';"
        env:
          PGPASSWORD: ""

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[test]"
          python -m pip install "Django==${{ matrix.django-version }}"

      - name: Test with Pytest
        env:
          DJANGO_DEBUG: 1
          DATABASE_URL: "postgres://runner:postgres@localhost:5432/test_db"
        run: |
          python -m pytest src/integrations develop
