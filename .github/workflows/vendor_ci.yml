name: Django Vendor CI

on:
  push:
    branches: [master]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:11
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vendor
        # Set health checks to wait until postgres has started
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install mistune==0.8.4
          python -m pip install m2r
          python -m pip install -r requirements.dev.txt
      - name: Run Core Tests
        run: |
          cd develop
          python manage.py test
          python manage.py makemigrations --check --dry-run
        env:
          DJANGO_DEBUG: 1
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/vendor
      - name: Run Base Processor Tests
        run: |
          cd develop
          python manage.py test vendor.tests.test_processor.BaseProcessorTests
        env:
          DJANGO_DEBUG: 1
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/vendor
      # - name: Run Authorize.Net Tests
      #   run: |
      #     cd develop
      #     python manage.py test vendor.tests.test_processor.AuthorizeNetProcessorTests --exclude-tag external
      #   env:
      #     DJANGO_DEBUG: 1
      #     DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/vendor
      #     AUTHORIZE_NET_API_ID: ${{ secrets.AUTHORIZE_NET_API_ID }}
      #     AUTHORIZE_NET_TRANSACTION_KEY: ${{ secrets.AUTHORIZE_NET_TRANSACTION_KEY }}
      #     AUTHORIZE_NET_TRANSACTION_TYPE_DEFAULT: "authCaptureTransaction"
      #     VENDOR_PAYMENT_PROCESSOR: "authorizenet.AuthorizeNetProcessor"
      - name: Build Package
        run: |
          python -m pip install --upgrade build
          python3 -m build
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
